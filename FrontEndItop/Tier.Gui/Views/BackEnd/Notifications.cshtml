@{
    ViewBag.Title = "Notificaciones";
    ViewBag.SectionTitle = "Gestión de notificaciones";
    Layout = "~/Views/Shared/_Layout_Back.cshtml";
}

<!-- Small boxes (Stat box) -->
<div class="row">
</div>
<!-- /.row -->
<!-- Main row -->
<div class="row">
    <div class="col-md-4">
        <div class="box box-solid">
            <div class="box-header with-border">
                <i class="fa fa-pencil-square-o"></i>
                <h3 class="box-title">Formulario</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body" id="divNotificationForm">
                @Html.Partial("_FormCreateNotification")
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box box-solid">
            <div class="box-header with-border">
                <i class="fa fa-list"></i>
                <h3 class="box-title">Opciones</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body ">
                <a href="#" class="btn btn-block btn-social btn-google" id="btnStartSendingNotifications">
                    <i class="fa fa-paper-plane"></i> Enviar notificaciones.
                </a>
            </div>
            <!-- /.box-body -->
        </div>
    </div>
    <!-- /.col -->
    <div class="col-md-8">
        <div class="box box-solid">
            <div class="box-header with-border">
                <i class="fa fa-list"></i>
                <h3 class="box-title">Lista</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body divTableNotificationsList">
                @Html.Partial("_TableNotifications", (IEnumerable<Tier.Dto.FEi_Notification>)ViewBag.notificationsList)
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
</div>
<!-- modal detalle de la notificación -->
@Html.Partial("_ModalNotificationDetails")

<!-- Modal -->
<div class="modal fade" id="myModalNSP" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Proceso de envío de notificaciones</h4>
            </div>
            <div class="modal-body divBodyMessageSendingNotificationsProcess">
                <div class="overlay">
                    <i class="fa fa-refresh fa-spin"></i>&nbsp;Proceso de envío de notificaciones iniciado. Por favor espere a la respuesta.
                </div>
            </div>
            <div class="modal-footer divFooterMessageSendingNotificationsProcess">
                <button type="button" class="btn btn-default" data-dismiss="modal">Aceptar</button>
            </div>
        </div>
    </div>
</div>

<style>
    #tblBagHoursDetails > tbody > tr > th {
        width: 100px;
        vertical-align: top;
    }
</style>

<script>
    $("#btnStartSendingNotifications").click(function () {
        var decision = confirm("Confirme que desea iniciar el envío de notificaciones.");

        if (decision) {
            $(".divFooterMessageSendingNotificationsProcess").hide();
            $('#myModalNSP').modal({ backdrop: 'static', keyboard: false });

            $.get("@Url.Action("SendNotifications", "BackEnd")", null, function (data) {
                //{"EvaluatedNotifications":1,"EvaluatedBagHours":4,"NotifiedBagHours":0,"NotifiedBagHoursDetails":"[]","Message":"Se han procesado las notificaciones correctamente.","Result":true,"Error":null}
                $(".divBodyMessageSendingNotificationsProcess").empty();
                var response = "<p>Se ha terminado el procesamiento de notificaciones con los siguientes resultados.</p>" +
                    "<p><b>Mensaje:</b> " + data.Message + "</p>" +
                    "<p><b>Resultado:</b> " + data.Result + "</p>" +
                    "<p><b>Bolsas de horas procesadas:</b> " + data.EvaluatedBagHours + "</p>" +
                    "<p><b>Notificaciones Procesadas:</b> " + data.EvaluatedNotifications + "</p>" +
                    "<p><b>Bolsas de horas notificadas:</b> " + data.NotifiedBagHours + "</p>";

                $(".divBodyMessageSendingNotificationsProcess").html(response);
            }).complete(function () {
                $(".divFooterMessageSendingNotificationsProcess").show();
            }).fail(function (ex) {
                console.log(ex.responseText);
            });
        }
    });

    function InsertVariablePlaceHolder(control) {
        CKEDITOR.instances['html_template'].insertText($(control).data("placeholder"));
    }

    function NotifyFailureAjax(data) {
        new PNotify({
            title: "Error en la solicitud",
            text: data.statusText,
            type: "error",
            hide: true
        });
    }

    function ResetCustomControlsNotificationForm() {
        $('#recipients').tagsinput('removeAll');
        CKEDITOR.instances['html_template'].setData("");
    }

    function ValidateNotificationForm() {
        var blnResult = true;

        if (!$("#recipients").val()) {
            new PNotify({
                title: 'Notificación',
                text: 'No se han agregado destinatarios de correo',
                type: 'notice',
                hide: true
            });

            blnResult = false;
        }

        if (!$("#date_rule").val() && (!$("#hours_rule_lowest").val() || !$("#hours_rule_highest").val())) {
            new PNotify({
                title: 'Notificación',
                text: 'No se han especificado las reglas de validación para la notificación.',
                type: 'notice',
                hide: true
            });

            blnResult = false;
        }

        if (!$("#html_template").val()) {
            new PNotify({
                title: 'Notificación',
                text: 'No se han diseñado la plantilla para el correo de la notificación.',
                type: 'notice',
                hide: true
            });

            blnResult = false;
        }

        if (Number($("#hours_rule_lowest").val()) >= Number($("#hours_rule_highest").val())) {
            new PNotify({
                title: 'Notificación',
                text: 'El rango pa la regla de horas consuminas es inválido.',
                type: 'notice',
                hide: true
            });

            blnResult = false;
        }

        if (blnResult) {
            $("#frmCrear").submit();
        }
        else {
            return blnResult;
        }
    }

    function SaveNotificationSuccess(data) {
        if (data.result) {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });

            $("#btnResetNotificationForm").click();
            $('#recipients').tagsinput('removeAll');
            CKEDITOR.instances['html_template'].setData("");

            RefreshNotificationsTable();
        }
        else {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });
        }
    }

    function SaveNotificationFail(data) {
        NotifyFailureAjax(data);
        console.log(data.responseText);
    }

    function RefreshNotificationsTable() {
        $.get('@Url.Action("GetAllNotifications", "BackEnd")', null, function (data) {
            $(".divTableNotificationsList").empty();
            $(".divTableNotificationsList").html(data);
        }).fail(function (ex) {
            NotifyFailureAjax(ex);
            console.log(ex.responseText);
        });
    }

    function DeleteNotificationSuccess(data) {
        if (data.result) {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });

            RefreshNotificationsTable();
        }
        else {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });
        }
    }

    function DeleteNotificationFail(data) {
        NotifyFailureAjax(data);
        console.log(data.responseText);
    }

    $('#myModalND').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var nId = button.data('idbh') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.

        $.get("@Url.Action("GetNotificationById", "BackEnd")", { id: nId }, function (data) {
            $("#sNId").text(data.id);
            $("#sNRecipients").text(data.recipients);
            $("#sNDate_rule").text(data.date_rule + " día(s)");
            $("#sNHours_rule").text(data.hours_rule + "%");
            $("#sNNotes").text(data.notes);

            switch (data.status) {
                case 6:
                    $("#sNStatus").html("<small class=\"label bg-aqua\">Activo</small>");
                    break;
                case 7:
                    $("#sNStatus").html("<small class=\"label bg-red\">Inactivo</small>");
                    break;
                default:
                    $("#sNStatus").html("<small class=\"label bg-gray\">N/A</small>");
                    break;
            }

            $("#divNotificationHtmlTemplate").html(data.html_template);
        })
        .fail(function (ex) {
            NotifyFailureAjax(ex);
            console.log(ex.responseText);
        });
    });

    function EditNotificationFail(data) {
        NotifyFailureAjax(data);
        console.log(data.responseText);
    }

    function UpdateNotificationSuccess(data) {
        if (data.result) {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });

            $("#btnCancelNotificationForm").click();

            RefreshNotificationsTable();
        }
        else {
            new PNotify({
                title: data.notificationTitle,
                text: data.notificationMessage,
                type: data.notificationType,
                hide: true
            });
        }
    }

    function UpdateNotificationFail(data) {
        NotifyFailureAjax(data);
        console.log(data.responseText);
    }
</script>