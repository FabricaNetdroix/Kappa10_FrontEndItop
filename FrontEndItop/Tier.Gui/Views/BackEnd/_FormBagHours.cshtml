@model Tier.Dto.FEi_BagHours

@using (Ajax.BeginForm("SaveBagHours", "BackEnd", new AjaxOptions() { HttpMethod = "POST", OnFailure = "SaveBagHoursFail", OnSuccess = "SaveBagHoursSuccess", }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.organization_id)
        @Html.DropDownListFor(m => m.organization_id, null, "-- Seleccione --", new { @class = "form-control select2" })
        @Html.ValidationMessageFor(m => m.organization_id)
    </div>
    <!-- /.form-group -->
    <div class="form-group">
        @Html.LabelFor(m => m.contract_id)
        @Html.DropDownListFor(m => m.contract_id, null, "-- Seleccione --", new { @class = "form-control select2" })
        @Html.ValidationMessageFor(m => m.contract_id)
    </div>
   <!-- /.form-group -->
    <div class="form-group">
        <input type="button" name="btnViwContratDetails" id="btnViwContratDetails" value="Ver detalle" class="btn btn-info" disabled="disabled" data-toggle="modal" data-target="#myModal" />
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.quantity)
        @Html.TextBoxFor(m => m.quantity, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.quantity)
    </div>
    <!-- /.form-group -->
    <div class="form-group">
        @Html.LabelFor(m => m.is_warranty)
        @Html.CheckBox("is_warranty", new { @class = "minimal" })
    </div>
    <!-- /.form-group -->
    <div class="form-group">
        @Html.LabelFor(m => m.notes)
        @Html.TextAreaFor(m => m.notes, new { @class = "form-control" })
    </div>
    <!-- /.form-group -->
    <!-- /.box-body -->
    <div class="box-footer">
        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="reset" class="btn btn-default pull-right">Limpiar</button>
    </div>
}

<script>
    $("#organization_id").change(function () {
        var orgid = $(this).val();
        var orgname = $(this).text();

        $.get("@Url.Action("GetContractByOrganization", "BackEnd")", { organizationId: orgid })
            .success(function (data) {
                var atrArrOpts = '<option value> --Seleccione -- </option>';
                $(data).each(function (idx, item) {
                    atrArrOpts = atrArrOpts + '<option value="' + item.Value + '">' + item.Text + '</option>';
                })

                $("#contract_id").empty();
                $("#contract_id").append(atrArrOpts);

                $("#btnViwContratDetails").attr("disabled", "disabled");
            })
    });

    $("#contract_id").change(function () {
        var orgid = $(this).val();

        $.get("@Url.Action("GetContractInfoById", "BackEnd")", { contractId: orgid })
            .success(function (data) {
                $("#sContractNumber").text(data.id);
                $("#sContractName").text(data.name);
                $("#sContractDescription").text(data.description);

                var contractStartDate = new Date(parseInt(data.start_date.substr(6))).toLocaleDateString();
                var contractEndDate = new Date(parseInt(data.end_date.substr(6))).toLocaleDateString();

                $("#sContractTerm").text(contractStartDate + " hasta " + contractEndDate);
                $("#sContractProvider").text(data.provider_name);

                $("#btnViwContratDetails").removeAttr("disabled");
            })
    });

    function SaveBagHoursFail(data) {
        new PNotify({
            title: 'Fallido',
            text: data.message,
            type: data.notificationType,
            hide: false
        });
    }

    function SaveBagHoursSuccess(data) {
        if (data.result) {
            new PNotify({
                title: 'Exitoso',
                text: data.message,
                type: data.notificationType,
                hide: false
            });
        }
        else {
            new PNotify({
                title: 'Advertencia',
                text: data.message,
                type: data.notificationType,
                hide: false
            });
        }
    }
</script>